/**
 * @file Firebase Security Rules for CampusConnect India.
 *
 * @core_philosophy This ruleset enforces a public-read, public-write model. No authentication is required.
 * @data_structure Top-level collections for `/events`, `/clubs`, and `/benefits`. Events have a `clubId` to link them to clubs.
 * @key_security_decisions All data is publicly accessible (read and write).
 *
 * WARNING: These rules are for PROTOTYPING ONLY and provide minimal security.
 *          In a production environment, you MUST implement proper authorization.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read and write access to the /events collection.
     * @path /events/{eventId}
     * @allow (create, get, list, update, delete) Any unauthenticated user can create, read, update, and delete events.
     * @deny None - all operations are allowed for all users.
     * @principle Public read and write access for prototyping.
     */
    match /events/{eventId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows public read and write access to the /clubs collection.
     * @path /clubs/{clubId}
     * @allow (create, get, list, update, delete) Any unauthenticated user can create, read, update, and delete clubs.
     * @deny None - all operations are allowed for all users.
     * @principle Public read and write access for prototyping.
     */
    match /clubs/{clubId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows public read and write access to the /benefits collection.
     * @path /benefits/{benefitId}
     * @allow (create, get, list, update, delete) Any unauthenticated user can create, read, update, and delete benefits.
     * @deny None - all operations are allowed for all users.
     * @principle Public read and write access for prototyping.
     */
    match /benefits/{benefitId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}